<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ixan.elec.mapper.ElecRepairMapper" >
    <resultMap id="BaseResultMap" type="cn.ixan.elec.domain.ElecRepair" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="dev_id" property="devId" jdbcType="VARCHAR" />
        <result column="jct_id" property="jctId" jdbcType="VARCHAR" />
        <result column="repair_cycle" property="repairCycle" jdbcType="VARCHAR" />
        <result column="op_unit" property="opUnit" jdbcType="VARCHAR" />
        <result column="use_date" property="useDate" jdbcType="DATE" />
        <result column="dev_type" property="devType" jdbcType="VARCHAR" />
        <result column="start_date" property="startDate" jdbcType="DATE" />
        <result column="is_having" property="isHaving" jdbcType="VARCHAR" />
        <result column="comment" property="comment" jdbcType="VARCHAR" />
        <result column="record" property="record" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, dev_id, jct_id, repair_cycle, op_unit, use_date, dev_type, start_date,
        is_having, comment, record
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.ixan.elec.domain.ElecRepairExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from elec_repair
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from elec_repair
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from elec_repair
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="cn.ixan.elec.domain.ElecRepairExample" >
        delete from elec_repair
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="cn.ixan.elec.domain.ElecRepair" >
        insert into elec_repair
        <selectKey resultType="java.lang.String" order="BEFORE"
                   keyProperty="id">
            select replace(UUID(),'-','') from dual
        </selectKey>
        (id, dev_id, jct_id, repair_cycle, op_unit,
        use_date, dev_type, start_date,
        is_having, comment, record
        )
        values (#{id,jdbcType=VARCHAR}, #{devId,jdbcType=VARCHAR}, #{jctId,jdbcType=VARCHAR},
        #{devName,jdbcType=VARCHAR}, #{repairCycle,jdbcType=VARCHAR}, #{opUnit,jdbcType=VARCHAR},
        #{useDate,jdbcType=DATE}, #{devType,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE},
        #{isHaving,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{record,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.ixan.elec.domain.ElecRepair" >
        insert into elec_repair
        <selectKey resultType="java.lang.String" order="BEFORE"
                   keyProperty="id">
            select replace(UUID(),'-','') from dual
        </selectKey>
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="devId != null" >
                dev_id,
            </if>
            <if test="jctId != null" >
                jct_id,
            </if>
            <if test="repairCycle != null" >
                repair_cycle,
            </if>
            <if test="opUnit != null" >
                op_unit,
            </if>
            <if test="useDate != null" >
                use_date,
            </if>
            <if test="devType != null" >
                dev_type,
            </if>
            <if test="startDate != null" >
                start_date,
            </if>
            <if test="isHaving != null" >
                is_having,
            </if>
            <if test="comment != null" >
                comment,
            </if>
            <if test="record != null" >
                record,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="devId != null" >
                #{devId,jdbcType=VARCHAR},
            </if>
            <if test="jctId != null" >
                #{jctId,jdbcType=VARCHAR},
            </if>
            <if test="repairCycle != null" >
                #{repairCycle,jdbcType=VARCHAR},
            </if>
            <if test="opUnit != null" >
                #{opUnit,jdbcType=VARCHAR},
            </if>
            <if test="useDate != null" >
                #{useDate,jdbcType=DATE},
            </if>
            <if test="devType != null" >
                #{devType,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null" >
                #{startDate,jdbcType=DATE},
            </if>
            <if test="isHaving != null" >
                #{isHaving,jdbcType=VARCHAR},
            </if>
            <if test="comment != null" >
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="record != null" >
                #{record,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.ixan.elec.domain.ElecRepairExample" resultType="java.lang.Integer" >
        select count(*) from elec_repair
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update elec_repair
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.devId != null" >
                dev_id = #{record.devId,jdbcType=VARCHAR},
            </if>
            <if test="record.jctId != null" >
                jct_id = #{record.jctId,jdbcType=VARCHAR},
            </if>
            <if test="record.repairCycle != null" >
                repair_cycle = #{record.repairCycle,jdbcType=VARCHAR},
            </if>
            <if test="record.opUnit != null" >
                op_unit = #{record.opUnit,jdbcType=VARCHAR},
            </if>
            <if test="record.useDate != null" >
                use_date = #{record.useDate,jdbcType=DATE},
            </if>
            <if test="record.devType != null" >
                dev_type = #{record.devType,jdbcType=VARCHAR},
            </if>
            <if test="record.startDate != null" >
                start_date = #{record.startDate,jdbcType=DATE},
            </if>
            <if test="record.isHaving != null" >
                is_having = #{record.isHaving,jdbcType=VARCHAR},
            </if>
            <if test="record.comment != null" >
                comment = #{record.comment,jdbcType=VARCHAR},
            </if>
            <if test="record.record != null" >
                record = #{record.record,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update elec_repair
        set id = #{record.id,jdbcType=VARCHAR},
        dev_id = #{record.devId,jdbcType=VARCHAR},
        jct_id = #{record.jctId,jdbcType=VARCHAR},
        repair_cycle = #{record.repairCycle,jdbcType=VARCHAR},
        op_unit = #{record.opUnit,jdbcType=VARCHAR},
        use_date = #{record.useDate,jdbcType=DATE},
        dev_type = #{record.devType,jdbcType=VARCHAR},
        start_date = #{record.startDate,jdbcType=DATE},
        is_having = #{record.isHaving,jdbcType=VARCHAR},
        comment = #{record.comment,jdbcType=VARCHAR},
        record = #{record.record,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.ixan.elec.domain.ElecRepair" >
        update elec_repair
        <set >
            <if test="devId != null" >
                dev_id = #{devId,jdbcType=VARCHAR},
            </if>
            <if test="jctId != null" >
                jct_id = #{jctId,jdbcType=VARCHAR},
            </if>
            <if test="repairCycle != null" >
                repair_cycle = #{repairCycle,jdbcType=VARCHAR},
            </if>
            <if test="opUnit != null" >
                op_unit = #{opUnit,jdbcType=VARCHAR},
            </if>
            <if test="useDate != null" >
                use_date = #{useDate,jdbcType=DATE},
            </if>
            <if test="devType != null" >
                dev_type = #{devType,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null" >
                start_date = #{startDate,jdbcType=DATE},
            </if>
            <if test="isHaving != null" >
                is_having = #{isHaving,jdbcType=VARCHAR},
            </if>
            <if test="comment != null" >
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="record != null" >
                record = #{record,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.ixan.elec.domain.ElecRepair" >
        update elec_repair
        set dev_id = #{devId,jdbcType=VARCHAR},
        jct_id = #{jctId,jdbcType=VARCHAR},
        repair_cycle = #{repairCycle,jdbcType=VARCHAR},
        op_unit = #{opUnit,jdbcType=VARCHAR},
        use_date = #{useDate,jdbcType=DATE},
        dev_type = #{devType,jdbcType=VARCHAR},
        start_date = #{startDate,jdbcType=DATE},
        is_having = #{isHaving,jdbcType=VARCHAR},
        comment = #{comment,jdbcType=VARCHAR},
        record = #{record,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <!--查询所有设备校准检修记录-->
    <sql id="repairResult">
        rep.id id,
        dev.dev_name devId,
        rep.repair_cycle repairCycle,
        rep.use_date useDate,
        dict2.dict_name isHaving,
        rep.start_date startDate,
        dict1.dict_name jctId
    </sql>
    <select id="findAllRepairRecords" resultType="cn.ixan.elec.domain.ElecRepair">
        SELECT
        <include refid="repairResult"/>
        FROM
            elec_repair AS rep
        LEFT JOIN elec_equapment dev ON rep.dev_id = dev.id
        LEFT JOIN elec_dict dict1 ON rep.jct_id = dict1.id
        LEFT JOIN elec_dict dict2 ON rep.is_having = dict2.id
    </select>
</mapper>